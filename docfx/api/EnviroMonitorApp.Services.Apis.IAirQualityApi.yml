### YamlMime:ManagedReference
items:
- uid: EnviroMonitorApp.Services.Apis.IAirQualityApi
  commentId: T:EnviroMonitorApp.Services.Apis.IAirQualityApi
  id: IAirQualityApi
  parent: EnviroMonitorApp.Services.Apis
  children:
  - EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocationLatest(System.Int32)
  - EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocations(System.String,System.String,System.Int32,System.String,System.Int32)
  - EnviroMonitorApp.Services.Apis.IAirQualityApi.GetSensorMeasurementsAsync(System.Int32,System.String,System.String,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IAirQualityApi
  nameWithType: IAirQualityApi
  fullName: EnviroMonitorApp.Services.Apis.IAirQualityApi
  type: Interface
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/Apis/IAirQualityApi.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: IAirQualityApi
    path: ../EnviroMonitorApp.Core/Services/Apis/IAirQualityApi.cs
    startLine: 6
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services.Apis
  syntax:
    content: public interface IAirQualityApi
    content.vb: Public Interface IAirQualityApi
- uid: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocations(System.String,System.String,System.Int32,System.String,System.Int32)
  commentId: M:EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocations(System.String,System.String,System.Int32,System.String,System.Int32)
  id: GetLocations(System.String,System.String,System.Int32,System.String,System.Int32)
  parent: EnviroMonitorApp.Services.Apis.IAirQualityApi
  langs:
  - csharp
  - vb
  name: GetLocations(string, string, int, string, int)
  nameWithType: IAirQualityApi.GetLocations(string, string, int, string, int)
  fullName: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocations(string, string, int, string, int)
  type: Method
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/Apis/IAirQualityApi.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: GetLocations
    path: ../EnviroMonitorApp.Core/Services/Apis/IAirQualityApi.cs
    startLine: 8
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services.Apis
  syntax:
    content: >-
      [Get("/v3/locations")]

      Task<LocationResponse> GetLocations(string iso, string latlon, int radiusMeters, string parameterIdsCsv, int limit)
    parameters:
    - id: iso
      type: System.String
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: iso
    - id: latlon
      type: System.String
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: coordinates
    - id: radiusMeters
      type: System.Int32
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: radius
    - id: parameterIdsCsv
      type: System.String
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: parameters_id
    - id: limit
      type: System.Int32
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: limit
    return:
      type: System.Threading.Tasks.Task{EnviroMonitorApp.Services.Apis.LocationResponse}
    content.vb: >-
      <Get("/v3/locations")>

      Function GetLocations(iso As String, latlon As String, radiusMeters As Integer, parameterIdsCsv As String, limit As Integer) As Task(Of LocationResponse)
  overload: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocations*
  attributes:
  - type: Refit.GetAttribute
    ctor: Refit.GetAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: /v3/locations
  nameWithType.vb: IAirQualityApi.GetLocations(String, String, Integer, String, Integer)
  fullName.vb: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocations(String, String, Integer, String, Integer)
  name.vb: GetLocations(String, String, Integer, String, Integer)
- uid: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocationLatest(System.Int32)
  commentId: M:EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocationLatest(System.Int32)
  id: GetLocationLatest(System.Int32)
  parent: EnviroMonitorApp.Services.Apis.IAirQualityApi
  langs:
  - csharp
  - vb
  name: GetLocationLatest(int)
  nameWithType: IAirQualityApi.GetLocationLatest(int)
  fullName: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocationLatest(int)
  type: Method
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/Apis/IAirQualityApi.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: GetLocationLatest
    path: ../EnviroMonitorApp.Core/Services/Apis/IAirQualityApi.cs
    startLine: 17
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services.Apis
  syntax:
    content: >-
      [Get("/v3/locations/{locationId}/latest")]

      Task<LocationLatestResponse> GetLocationLatest(int locationId)
    parameters:
    - id: locationId
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task{EnviroMonitorApp.Services.Apis.LocationLatestResponse}
    content.vb: >-
      <Get("/v3/locations/{locationId}/latest")>

      Function GetLocationLatest(locationId As Integer) As Task(Of LocationLatestResponse)
  overload: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocationLatest*
  attributes:
  - type: Refit.GetAttribute
    ctor: Refit.GetAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: /v3/locations/{locationId}/latest
  nameWithType.vb: IAirQualityApi.GetLocationLatest(Integer)
  fullName.vb: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocationLatest(Integer)
  name.vb: GetLocationLatest(Integer)
- uid: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetSensorMeasurementsAsync(System.Int32,System.String,System.String,System.Int32,System.Int32)
  commentId: M:EnviroMonitorApp.Services.Apis.IAirQualityApi.GetSensorMeasurementsAsync(System.Int32,System.String,System.String,System.Int32,System.Int32)
  id: GetSensorMeasurementsAsync(System.Int32,System.String,System.String,System.Int32,System.Int32)
  parent: EnviroMonitorApp.Services.Apis.IAirQualityApi
  langs:
  - csharp
  - vb
  name: GetSensorMeasurementsAsync(int, string, string, int, int)
  nameWithType: IAirQualityApi.GetSensorMeasurementsAsync(int, string, string, int, int)
  fullName: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetSensorMeasurementsAsync(int, string, string, int, int)
  type: Method
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/Apis/IAirQualityApi.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: GetSensorMeasurementsAsync
    path: ../EnviroMonitorApp.Core/Services/Apis/IAirQualityApi.cs
    startLine: 21
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services.Apis
  syntax:
    content: >-
      [Get("/v3/sensors/{sensorId}/measurements")]

      Task<MeasurementsResponse> GetSensorMeasurementsAsync(int sensorId, string datetimeFromUtc, string datetimeToUtc, int limit, int page)
    parameters:
    - id: sensorId
      type: System.Int32
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: sensorId
    - id: datetimeFromUtc
      type: System.String
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: datetime_from
    - id: datetimeToUtc
      type: System.String
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: datetime_to
    - id: limit
      type: System.Int32
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: limit
    - id: page
      type: System.Int32
      attributes:
      - type: Refit.AliasAsAttribute
        ctor: Refit.AliasAsAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: page
    return:
      type: System.Threading.Tasks.Task{EnviroMonitorApp.Services.Apis.MeasurementsResponse}
    content.vb: >-
      <Get("/v3/sensors/{sensorId}/measurements")>

      Function GetSensorMeasurementsAsync(sensorId As Integer, datetimeFromUtc As String, datetimeToUtc As String, limit As Integer, page As Integer) As Task(Of MeasurementsResponse)
  overload: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetSensorMeasurementsAsync*
  attributes:
  - type: Refit.GetAttribute
    ctor: Refit.GetAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: /v3/sensors/{sensorId}/measurements
  nameWithType.vb: IAirQualityApi.GetSensorMeasurementsAsync(Integer, String, String, Integer, Integer)
  fullName.vb: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetSensorMeasurementsAsync(Integer, String, String, Integer, Integer)
  name.vb: GetSensorMeasurementsAsync(Integer, String, String, Integer, Integer)
references:
- uid: EnviroMonitorApp.Services.Apis
  commentId: N:EnviroMonitorApp.Services.Apis
  href: EnviroMonitorApp.html
  name: EnviroMonitorApp.Services.Apis
  nameWithType: EnviroMonitorApp.Services.Apis
  fullName: EnviroMonitorApp.Services.Apis
  spec.csharp:
  - uid: EnviroMonitorApp
    name: EnviroMonitorApp
    href: EnviroMonitorApp.html
  - name: .
  - uid: EnviroMonitorApp.Services
    name: Services
    href: EnviroMonitorApp.Services.html
  - name: .
  - uid: EnviroMonitorApp.Services.Apis
    name: Apis
    href: EnviroMonitorApp.Services.Apis.html
  spec.vb:
  - uid: EnviroMonitorApp
    name: EnviroMonitorApp
    href: EnviroMonitorApp.html
  - name: .
  - uid: EnviroMonitorApp.Services
    name: Services
    href: EnviroMonitorApp.Services.html
  - name: .
  - uid: EnviroMonitorApp.Services.Apis
    name: Apis
    href: EnviroMonitorApp.Services.Apis.html
- uid: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocations*
  commentId: Overload:EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocations
  href: EnviroMonitorApp.Services.Apis.IAirQualityApi.html#EnviroMonitorApp_Services_Apis_IAirQualityApi_GetLocations_System_String_System_String_System_Int32_System_String_System_Int32_
  name: GetLocations
  nameWithType: IAirQualityApi.GetLocations
  fullName: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocations
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{EnviroMonitorApp.Services.Apis.LocationResponse}
  commentId: T:System.Threading.Tasks.Task{EnviroMonitorApp.Services.Apis.LocationResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<LocationResponse>
  nameWithType: Task<LocationResponse>
  fullName: System.Threading.Tasks.Task<EnviroMonitorApp.Services.Apis.LocationResponse>
  nameWithType.vb: Task(Of LocationResponse)
  fullName.vb: System.Threading.Tasks.Task(Of EnviroMonitorApp.Services.Apis.LocationResponse)
  name.vb: Task(Of LocationResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EnviroMonitorApp.Services.Apis.LocationResponse
    name: LocationResponse
    href: EnviroMonitorApp.Services.Apis.LocationResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EnviroMonitorApp.Services.Apis.LocationResponse
    name: LocationResponse
    href: EnviroMonitorApp.Services.Apis.LocationResponse.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocationLatest*
  commentId: Overload:EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocationLatest
  href: EnviroMonitorApp.Services.Apis.IAirQualityApi.html#EnviroMonitorApp_Services_Apis_IAirQualityApi_GetLocationLatest_System_Int32_
  name: GetLocationLatest
  nameWithType: IAirQualityApi.GetLocationLatest
  fullName: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetLocationLatest
- uid: System.Threading.Tasks.Task{EnviroMonitorApp.Services.Apis.LocationLatestResponse}
  commentId: T:System.Threading.Tasks.Task{EnviroMonitorApp.Services.Apis.LocationLatestResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<LocationLatestResponse>
  nameWithType: Task<LocationLatestResponse>
  fullName: System.Threading.Tasks.Task<EnviroMonitorApp.Services.Apis.LocationLatestResponse>
  nameWithType.vb: Task(Of LocationLatestResponse)
  fullName.vb: System.Threading.Tasks.Task(Of EnviroMonitorApp.Services.Apis.LocationLatestResponse)
  name.vb: Task(Of LocationLatestResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EnviroMonitorApp.Services.Apis.LocationLatestResponse
    name: LocationLatestResponse
    href: EnviroMonitorApp.Services.Apis.LocationLatestResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EnviroMonitorApp.Services.Apis.LocationLatestResponse
    name: LocationLatestResponse
    href: EnviroMonitorApp.Services.Apis.LocationLatestResponse.html
  - name: )
- uid: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetSensorMeasurementsAsync*
  commentId: Overload:EnviroMonitorApp.Services.Apis.IAirQualityApi.GetSensorMeasurementsAsync
  href: EnviroMonitorApp.Services.Apis.IAirQualityApi.html#EnviroMonitorApp_Services_Apis_IAirQualityApi_GetSensorMeasurementsAsync_System_Int32_System_String_System_String_System_Int32_System_Int32_
  name: GetSensorMeasurementsAsync
  nameWithType: IAirQualityApi.GetSensorMeasurementsAsync
  fullName: EnviroMonitorApp.Services.Apis.IAirQualityApi.GetSensorMeasurementsAsync
- uid: System.Threading.Tasks.Task{EnviroMonitorApp.Services.Apis.MeasurementsResponse}
  commentId: T:System.Threading.Tasks.Task{EnviroMonitorApp.Services.Apis.MeasurementsResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MeasurementsResponse>
  nameWithType: Task<MeasurementsResponse>
  fullName: System.Threading.Tasks.Task<EnviroMonitorApp.Services.Apis.MeasurementsResponse>
  nameWithType.vb: Task(Of MeasurementsResponse)
  fullName.vb: System.Threading.Tasks.Task(Of EnviroMonitorApp.Services.Apis.MeasurementsResponse)
  name.vb: Task(Of MeasurementsResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EnviroMonitorApp.Services.Apis.MeasurementsResponse
    name: MeasurementsResponse
    href: EnviroMonitorApp.Services.Apis.MeasurementsResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EnviroMonitorApp.Services.Apis.MeasurementsResponse
    name: MeasurementsResponse
    href: EnviroMonitorApp.Services.Apis.MeasurementsResponse.html
  - name: )
