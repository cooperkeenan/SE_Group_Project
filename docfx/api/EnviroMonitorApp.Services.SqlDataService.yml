### YamlMime:ManagedReference
items:
- uid: EnviroMonitorApp.Services.SqlDataService
  commentId: T:EnviroMonitorApp.Services.SqlDataService
  id: SqlDataService
  parent: EnviroMonitorApp.Services
  children:
  - EnviroMonitorApp.Services.SqlDataService.#ctor(EnviroMonitorApp.Services.IFileSystemService)
  - EnviroMonitorApp.Services.SqlDataService.GetAirQualityAsync(System.DateTime,System.DateTime,System.String)
  - EnviroMonitorApp.Services.SqlDataService.GetHistoricalWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  - EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  - EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(System.Int32,System.String)
  - EnviroMonitorApp.Services.SqlDataService.GetWeatherAsync(System.DateTime,System.DateTime,System.String)
  langs:
  - csharp
  - vb
  name: SqlDataService
  nameWithType: SqlDataService
  fullName: EnviroMonitorApp.Services.SqlDataService
  type: Class
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/SqlDataService.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: SqlDataService
    path: ../EnviroMonitorApp.Core/Services/SqlDataService.cs
    startLine: 16
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services
  summary: >-
    Implementation of IEnvironmentalDataService that uses SQLite database

    to store and retrieve environmental data.
  example: []
  syntax:
    content: 'public class SqlDataService : IEnvironmentalDataService'
    content.vb: Public Class SqlDataService Implements IEnvironmentalDataService
  inheritance:
  - System.Object
  implements:
  - EnviroMonitorApp.Services.IEnvironmentalDataService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: EnviroMonitorApp.Services.SqlDataService.#ctor(EnviroMonitorApp.Services.IFileSystemService)
  commentId: M:EnviroMonitorApp.Services.SqlDataService.#ctor(EnviroMonitorApp.Services.IFileSystemService)
  id: '#ctor(EnviroMonitorApp.Services.IFileSystemService)'
  parent: EnviroMonitorApp.Services.SqlDataService
  langs:
  - csharp
  - vb
  name: SqlDataService(IFileSystemService)
  nameWithType: SqlDataService.SqlDataService(IFileSystemService)
  fullName: EnviroMonitorApp.Services.SqlDataService.SqlDataService(EnviroMonitorApp.Services.IFileSystemService)
  type: Constructor
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/SqlDataService.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: .ctor
    path: ../EnviroMonitorApp.Core/Services/SqlDataService.cs
    startLine: 27
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services
  summary: >-
    Initializes a new instance of the SqlDataService class.

    Sets up the SQLite database connection and ensures tables are created.
  example: []
  syntax:
    content: public SqlDataService(IFileSystemService fileSystem)
    parameters:
    - id: fileSystem
      type: EnviroMonitorApp.Services.IFileSystemService
      description: File system service to access app directories and files.
    content.vb: Public Sub New(fileSystem As IFileSystemService)
  overload: EnviroMonitorApp.Services.SqlDataService.#ctor*
  nameWithType.vb: SqlDataService.New(IFileSystemService)
  fullName.vb: EnviroMonitorApp.Services.SqlDataService.New(EnviroMonitorApp.Services.IFileSystemService)
  name.vb: New(IFileSystemService)
- uid: EnviroMonitorApp.Services.SqlDataService.GetAirQualityAsync(System.DateTime,System.DateTime,System.String)
  commentId: M:EnviroMonitorApp.Services.SqlDataService.GetAirQualityAsync(System.DateTime,System.DateTime,System.String)
  id: GetAirQualityAsync(System.DateTime,System.DateTime,System.String)
  parent: EnviroMonitorApp.Services.SqlDataService
  langs:
  - csharp
  - vb
  name: GetAirQualityAsync(DateTime, DateTime, string)
  nameWithType: SqlDataService.GetAirQualityAsync(DateTime, DateTime, string)
  fullName: EnviroMonitorApp.Services.SqlDataService.GetAirQualityAsync(System.DateTime, System.DateTime, string)
  type: Method
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/SqlDataService.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: GetAirQualityAsync
    path: ../EnviroMonitorApp.Core/Services/SqlDataService.cs
    startLine: 132
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services
  summary: Retrieves air quality data for a specified time period and region from the SQLite database.
  example: []
  syntax:
    content: public Task<List<AirQualityRecord>> GetAirQualityAsync(DateTime from, DateTime to, string region)
    parameters:
    - id: from
      type: System.DateTime
      description: Start date and time.
    - id: to
      type: System.DateTime
      description: End date and time.
    - id: region
      type: System.String
      description: Geographic region identifier.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.AirQualityRecord}}
      description: A list of air quality records for the specified period and region.
    content.vb: Public Function GetAirQualityAsync(from As Date, [to] As Date, region As String) As Task(Of List(Of AirQualityRecord))
  overload: EnviroMonitorApp.Services.SqlDataService.GetAirQualityAsync*
  implements:
  - EnviroMonitorApp.Services.IEnvironmentalDataService.GetAirQualityAsync(System.DateTime,System.DateTime,System.String)
  nameWithType.vb: SqlDataService.GetAirQualityAsync(Date, Date, String)
  fullName.vb: EnviroMonitorApp.Services.SqlDataService.GetAirQualityAsync(Date, Date, String)
  name.vb: GetAirQualityAsync(Date, Date, String)
- uid: EnviroMonitorApp.Services.SqlDataService.GetWeatherAsync(System.DateTime,System.DateTime,System.String)
  commentId: M:EnviroMonitorApp.Services.SqlDataService.GetWeatherAsync(System.DateTime,System.DateTime,System.String)
  id: GetWeatherAsync(System.DateTime,System.DateTime,System.String)
  parent: EnviroMonitorApp.Services.SqlDataService
  langs:
  - csharp
  - vb
  name: GetWeatherAsync(DateTime, DateTime, string)
  nameWithType: SqlDataService.GetWeatherAsync(DateTime, DateTime, string)
  fullName: EnviroMonitorApp.Services.SqlDataService.GetWeatherAsync(System.DateTime, System.DateTime, string)
  type: Method
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/SqlDataService.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: GetWeatherAsync
    path: ../EnviroMonitorApp.Core/Services/SqlDataService.cs
    startLine: 167
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services
  summary: Retrieves weather data for a specified time period and region from the SQLite database.
  example: []
  syntax:
    content: public Task<List<WeatherRecord>> GetWeatherAsync(DateTime from, DateTime to, string region)
    parameters:
    - id: from
      type: System.DateTime
      description: Start date and time.
    - id: to
      type: System.DateTime
      description: End date and time.
    - id: region
      type: System.String
      description: Geographic region identifier.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.WeatherRecord}}
      description: A list of weather records for the specified period and region.
    content.vb: Public Function GetWeatherAsync(from As Date, [to] As Date, region As String) As Task(Of List(Of WeatherRecord))
  overload: EnviroMonitorApp.Services.SqlDataService.GetWeatherAsync*
  implements:
  - EnviroMonitorApp.Services.IEnvironmentalDataService.GetWeatherAsync(System.DateTime,System.DateTime,System.String)
  nameWithType.vb: SqlDataService.GetWeatherAsync(Date, Date, String)
  fullName.vb: EnviroMonitorApp.Services.SqlDataService.GetWeatherAsync(Date, Date, String)
  name.vb: GetWeatherAsync(Date, Date, String)
- uid: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  commentId: M:EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  id: GetWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  parent: EnviroMonitorApp.Services.SqlDataService
  langs:
  - csharp
  - vb
  name: GetWaterQualityAsync(DateTime, DateTime, string)
  nameWithType: SqlDataService.GetWaterQualityAsync(DateTime, DateTime, string)
  fullName: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(System.DateTime, System.DateTime, string)
  type: Method
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/SqlDataService.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: GetWaterQualityAsync
    path: ../EnviroMonitorApp.Core/Services/SqlDataService.cs
    startLine: 228
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services
  summary: Retrieves water quality data for a specified time period and region from the SQLite database.
  example: []
  syntax:
    content: public Task<List<WaterQualityRecord>> GetWaterQualityAsync(DateTime from, DateTime to, string region)
    parameters:
    - id: from
      type: System.DateTime
      description: Start date and time.
    - id: to
      type: System.DateTime
      description: End date and time.
    - id: region
      type: System.String
      description: Geographic region identifier.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.WaterQualityRecord}}
      description: A list of water quality records for the specified period and region.
    content.vb: Public Function GetWaterQualityAsync(from As Date, [to] As Date, region As String) As Task(Of List(Of WaterQualityRecord))
  overload: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync*
  implements:
  - EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  nameWithType.vb: SqlDataService.GetWaterQualityAsync(Date, Date, String)
  fullName.vb: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(Date, Date, String)
  name.vb: GetWaterQualityAsync(Date, Date, String)
- uid: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(System.Int32,System.String)
  commentId: M:EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(System.Int32,System.String)
  id: GetWaterQualityAsync(System.Int32,System.String)
  parent: EnviroMonitorApp.Services.SqlDataService
  langs:
  - csharp
  - vb
  name: GetWaterQualityAsync(int, string)
  nameWithType: SqlDataService.GetWaterQualityAsync(int, string)
  fullName: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(int, string)
  type: Method
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/SqlDataService.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: GetWaterQualityAsync
    path: ../EnviroMonitorApp.Core/Services/SqlDataService.cs
    startLine: 282
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services
  summary: Retrieves water quality data for a specified number of hours up to the present.
  example: []
  syntax:
    content: public Task<List<WaterQualityRecord>> GetWaterQualityAsync(int hours, string region = "")
    parameters:
    - id: hours
      type: System.Int32
      description: Number of hours of data to retrieve.
    - id: region
      type: System.String
      description: Geographic region identifier.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.WaterQualityRecord}}
      description: A list of water quality records for the specified duration.
    content.vb: Public Function GetWaterQualityAsync(hours As Integer, region As String = "") As Task(Of List(Of WaterQualityRecord))
  overload: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync*
  implements:
  - EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.Int32,System.String)
  nameWithType.vb: SqlDataService.GetWaterQualityAsync(Integer, String)
  fullName.vb: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync(Integer, String)
  name.vb: GetWaterQualityAsync(Integer, String)
- uid: EnviroMonitorApp.Services.SqlDataService.GetHistoricalWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  commentId: M:EnviroMonitorApp.Services.SqlDataService.GetHistoricalWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  id: GetHistoricalWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  parent: EnviroMonitorApp.Services.SqlDataService
  langs:
  - csharp
  - vb
  name: GetHistoricalWaterQualityAsync(DateTime, DateTime, string)
  nameWithType: SqlDataService.GetHistoricalWaterQualityAsync(DateTime, DateTime, string)
  fullName: EnviroMonitorApp.Services.SqlDataService.GetHistoricalWaterQualityAsync(System.DateTime, System.DateTime, string)
  type: Method
  source:
    remote:
      path: EnviroMonitorApp.Core/Services/SqlDataService.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: GetHistoricalWaterQualityAsync
    path: ../EnviroMonitorApp.Core/Services/SqlDataService.cs
    startLine: 292
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services
  summary: Retrieves historical water quality data for a specified time period and region.
  example: []
  syntax:
    content: public Task<List<WaterQualityRecord>> GetHistoricalWaterQualityAsync(DateTime from, DateTime to, string region)
    parameters:
    - id: from
      type: System.DateTime
      description: Start date and time.
    - id: to
      type: System.DateTime
      description: End date and time.
    - id: region
      type: System.String
      description: Geographic region identifier.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.WaterQualityRecord}}
      description: A list of historical water quality records for the specified period and region.
    content.vb: Public Function GetHistoricalWaterQualityAsync(from As Date, [to] As Date, region As String) As Task(Of List(Of WaterQualityRecord))
  overload: EnviroMonitorApp.Services.SqlDataService.GetHistoricalWaterQualityAsync*
  implements:
  - EnviroMonitorApp.Services.IEnvironmentalDataService.GetHistoricalWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  nameWithType.vb: SqlDataService.GetHistoricalWaterQualityAsync(Date, Date, String)
  fullName.vb: EnviroMonitorApp.Services.SqlDataService.GetHistoricalWaterQualityAsync(Date, Date, String)
  name.vb: GetHistoricalWaterQualityAsync(Date, Date, String)
references:
- uid: EnviroMonitorApp.Services
  commentId: N:EnviroMonitorApp.Services
  href: EnviroMonitorApp.html
  name: EnviroMonitorApp.Services
  nameWithType: EnviroMonitorApp.Services
  fullName: EnviroMonitorApp.Services
  spec.csharp:
  - uid: EnviroMonitorApp
    name: EnviroMonitorApp
    href: EnviroMonitorApp.html
  - name: .
  - uid: EnviroMonitorApp.Services
    name: Services
    href: EnviroMonitorApp.Services.html
  spec.vb:
  - uid: EnviroMonitorApp
    name: EnviroMonitorApp
    href: EnviroMonitorApp.html
  - name: .
  - uid: EnviroMonitorApp.Services
    name: Services
    href: EnviroMonitorApp.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: EnviroMonitorApp.Services.IEnvironmentalDataService
  commentId: T:EnviroMonitorApp.Services.IEnvironmentalDataService
  parent: EnviroMonitorApp.Services
  href: EnviroMonitorApp.Services.IEnvironmentalDataService.html
  name: IEnvironmentalDataService
  nameWithType: IEnvironmentalDataService
  fullName: EnviroMonitorApp.Services.IEnvironmentalDataService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnviroMonitorApp.Services.SqlDataService.#ctor*
  commentId: Overload:EnviroMonitorApp.Services.SqlDataService.#ctor
  href: EnviroMonitorApp.Services.SqlDataService.html#EnviroMonitorApp_Services_SqlDataService__ctor_EnviroMonitorApp_Services_IFileSystemService_
  name: SqlDataService
  nameWithType: SqlDataService.SqlDataService
  fullName: EnviroMonitorApp.Services.SqlDataService.SqlDataService
  nameWithType.vb: SqlDataService.New
  fullName.vb: EnviroMonitorApp.Services.SqlDataService.New
  name.vb: New
- uid: EnviroMonitorApp.Services.IFileSystemService
  commentId: T:EnviroMonitorApp.Services.IFileSystemService
  parent: EnviroMonitorApp.Services
  href: EnviroMonitorApp.Services.IFileSystemService.html
  name: IFileSystemService
  nameWithType: IFileSystemService
  fullName: EnviroMonitorApp.Services.IFileSystemService
- uid: EnviroMonitorApp.Services.SqlDataService.GetAirQualityAsync*
  commentId: Overload:EnviroMonitorApp.Services.SqlDataService.GetAirQualityAsync
  href: EnviroMonitorApp.Services.SqlDataService.html#EnviroMonitorApp_Services_SqlDataService_GetAirQualityAsync_System_DateTime_System_DateTime_System_String_
  name: GetAirQualityAsync
  nameWithType: SqlDataService.GetAirQualityAsync
  fullName: EnviroMonitorApp.Services.SqlDataService.GetAirQualityAsync
- uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetAirQualityAsync(System.DateTime,System.DateTime,System.String)
  commentId: M:EnviroMonitorApp.Services.IEnvironmentalDataService.GetAirQualityAsync(System.DateTime,System.DateTime,System.String)
  parent: EnviroMonitorApp.Services.IEnvironmentalDataService
  isExternal: true
  href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetAirQualityAsync_System_DateTime_System_DateTime_System_String_
  name: GetAirQualityAsync(DateTime, DateTime, string)
  nameWithType: IEnvironmentalDataService.GetAirQualityAsync(DateTime, DateTime, string)
  fullName: EnviroMonitorApp.Services.IEnvironmentalDataService.GetAirQualityAsync(System.DateTime, System.DateTime, string)
  nameWithType.vb: IEnvironmentalDataService.GetAirQualityAsync(Date, Date, String)
  fullName.vb: EnviroMonitorApp.Services.IEnvironmentalDataService.GetAirQualityAsync(Date, Date, String)
  name.vb: GetAirQualityAsync(Date, Date, String)
  spec.csharp:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetAirQualityAsync(System.DateTime,System.DateTime,System.String)
    name: GetAirQualityAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetAirQualityAsync_System_DateTime_System_DateTime_System_String_
  - name: (
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetAirQualityAsync(System.DateTime,System.DateTime,System.String)
    name: GetAirQualityAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetAirQualityAsync_System_DateTime_System_DateTime_System_String_
  - name: (
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.AirQualityRecord}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.AirQualityRecord}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<AirQualityRecord>>
  nameWithType: Task<List<AirQualityRecord>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<EnviroMonitorApp.Models.AirQualityRecord>>
  nameWithType.vb: Task(Of List(Of AirQualityRecord))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of EnviroMonitorApp.Models.AirQualityRecord))
  name.vb: Task(Of List(Of AirQualityRecord))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: EnviroMonitorApp.Models.AirQualityRecord
    name: AirQualityRecord
    href: EnviroMonitorApp.Models.AirQualityRecord.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: EnviroMonitorApp.Models.AirQualityRecord
    name: AirQualityRecord
    href: EnviroMonitorApp.Models.AirQualityRecord.html
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: EnviroMonitorApp.Services.SqlDataService.GetWeatherAsync*
  commentId: Overload:EnviroMonitorApp.Services.SqlDataService.GetWeatherAsync
  href: EnviroMonitorApp.Services.SqlDataService.html#EnviroMonitorApp_Services_SqlDataService_GetWeatherAsync_System_DateTime_System_DateTime_System_String_
  name: GetWeatherAsync
  nameWithType: SqlDataService.GetWeatherAsync
  fullName: EnviroMonitorApp.Services.SqlDataService.GetWeatherAsync
- uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWeatherAsync(System.DateTime,System.DateTime,System.String)
  commentId: M:EnviroMonitorApp.Services.IEnvironmentalDataService.GetWeatherAsync(System.DateTime,System.DateTime,System.String)
  parent: EnviroMonitorApp.Services.IEnvironmentalDataService
  isExternal: true
  href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetWeatherAsync_System_DateTime_System_DateTime_System_String_
  name: GetWeatherAsync(DateTime, DateTime, string)
  nameWithType: IEnvironmentalDataService.GetWeatherAsync(DateTime, DateTime, string)
  fullName: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWeatherAsync(System.DateTime, System.DateTime, string)
  nameWithType.vb: IEnvironmentalDataService.GetWeatherAsync(Date, Date, String)
  fullName.vb: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWeatherAsync(Date, Date, String)
  name.vb: GetWeatherAsync(Date, Date, String)
  spec.csharp:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWeatherAsync(System.DateTime,System.DateTime,System.String)
    name: GetWeatherAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetWeatherAsync_System_DateTime_System_DateTime_System_String_
  - name: (
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWeatherAsync(System.DateTime,System.DateTime,System.String)
    name: GetWeatherAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetWeatherAsync_System_DateTime_System_DateTime_System_String_
  - name: (
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.WeatherRecord}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.WeatherRecord}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<WeatherRecord>>
  nameWithType: Task<List<WeatherRecord>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<EnviroMonitorApp.Models.WeatherRecord>>
  nameWithType.vb: Task(Of List(Of WeatherRecord))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of EnviroMonitorApp.Models.WeatherRecord))
  name.vb: Task(Of List(Of WeatherRecord))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: EnviroMonitorApp.Models.WeatherRecord
    name: WeatherRecord
    href: EnviroMonitorApp.Models.WeatherRecord.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: EnviroMonitorApp.Models.WeatherRecord
    name: WeatherRecord
    href: EnviroMonitorApp.Models.WeatherRecord.html
  - name: )
  - name: )
- uid: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync*
  commentId: Overload:EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync
  href: EnviroMonitorApp.Services.SqlDataService.html#EnviroMonitorApp_Services_SqlDataService_GetWaterQualityAsync_System_DateTime_System_DateTime_System_String_
  name: GetWaterQualityAsync
  nameWithType: SqlDataService.GetWaterQualityAsync
  fullName: EnviroMonitorApp.Services.SqlDataService.GetWaterQualityAsync
- uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  commentId: M:EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  parent: EnviroMonitorApp.Services.IEnvironmentalDataService
  isExternal: true
  href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetWaterQualityAsync_System_DateTime_System_DateTime_System_String_
  name: GetWaterQualityAsync(DateTime, DateTime, string)
  nameWithType: IEnvironmentalDataService.GetWaterQualityAsync(DateTime, DateTime, string)
  fullName: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.DateTime, System.DateTime, string)
  nameWithType.vb: IEnvironmentalDataService.GetWaterQualityAsync(Date, Date, String)
  fullName.vb: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(Date, Date, String)
  name.vb: GetWaterQualityAsync(Date, Date, String)
  spec.csharp:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.DateTime,System.DateTime,System.String)
    name: GetWaterQualityAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetWaterQualityAsync_System_DateTime_System_DateTime_System_String_
  - name: (
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.DateTime,System.DateTime,System.String)
    name: GetWaterQualityAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetWaterQualityAsync_System_DateTime_System_DateTime_System_String_
  - name: (
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.WaterQualityRecord}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{EnviroMonitorApp.Models.WaterQualityRecord}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<WaterQualityRecord>>
  nameWithType: Task<List<WaterQualityRecord>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<EnviroMonitorApp.Models.WaterQualityRecord>>
  nameWithType.vb: Task(Of List(Of WaterQualityRecord))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of EnviroMonitorApp.Models.WaterQualityRecord))
  name.vb: Task(Of List(Of WaterQualityRecord))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: EnviroMonitorApp.Models.WaterQualityRecord
    name: WaterQualityRecord
    href: EnviroMonitorApp.Models.WaterQualityRecord.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: EnviroMonitorApp.Models.WaterQualityRecord
    name: WaterQualityRecord
    href: EnviroMonitorApp.Models.WaterQualityRecord.html
  - name: )
  - name: )
- uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.Int32,System.String)
  commentId: M:EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.Int32,System.String)
  parent: EnviroMonitorApp.Services.IEnvironmentalDataService
  isExternal: true
  href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetWaterQualityAsync_System_Int32_System_String_
  name: GetWaterQualityAsync(int, string)
  nameWithType: IEnvironmentalDataService.GetWaterQualityAsync(int, string)
  fullName: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(int, string)
  nameWithType.vb: IEnvironmentalDataService.GetWaterQualityAsync(Integer, String)
  fullName.vb: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(Integer, String)
  name.vb: GetWaterQualityAsync(Integer, String)
  spec.csharp:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.Int32,System.String)
    name: GetWaterQualityAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetWaterQualityAsync_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetWaterQualityAsync(System.Int32,System.String)
    name: GetWaterQualityAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetWaterQualityAsync_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: EnviroMonitorApp.Services.SqlDataService.GetHistoricalWaterQualityAsync*
  commentId: Overload:EnviroMonitorApp.Services.SqlDataService.GetHistoricalWaterQualityAsync
  href: EnviroMonitorApp.Services.SqlDataService.html#EnviroMonitorApp_Services_SqlDataService_GetHistoricalWaterQualityAsync_System_DateTime_System_DateTime_System_String_
  name: GetHistoricalWaterQualityAsync
  nameWithType: SqlDataService.GetHistoricalWaterQualityAsync
  fullName: EnviroMonitorApp.Services.SqlDataService.GetHistoricalWaterQualityAsync
- uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetHistoricalWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  commentId: M:EnviroMonitorApp.Services.IEnvironmentalDataService.GetHistoricalWaterQualityAsync(System.DateTime,System.DateTime,System.String)
  parent: EnviroMonitorApp.Services.IEnvironmentalDataService
  isExternal: true
  href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetHistoricalWaterQualityAsync_System_DateTime_System_DateTime_System_String_
  name: GetHistoricalWaterQualityAsync(DateTime, DateTime, string)
  nameWithType: IEnvironmentalDataService.GetHistoricalWaterQualityAsync(DateTime, DateTime, string)
  fullName: EnviroMonitorApp.Services.IEnvironmentalDataService.GetHistoricalWaterQualityAsync(System.DateTime, System.DateTime, string)
  nameWithType.vb: IEnvironmentalDataService.GetHistoricalWaterQualityAsync(Date, Date, String)
  fullName.vb: EnviroMonitorApp.Services.IEnvironmentalDataService.GetHistoricalWaterQualityAsync(Date, Date, String)
  name.vb: GetHistoricalWaterQualityAsync(Date, Date, String)
  spec.csharp:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetHistoricalWaterQualityAsync(System.DateTime,System.DateTime,System.String)
    name: GetHistoricalWaterQualityAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetHistoricalWaterQualityAsync_System_DateTime_System_DateTime_System_String_
  - name: (
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: EnviroMonitorApp.Services.IEnvironmentalDataService.GetHistoricalWaterQualityAsync(System.DateTime,System.DateTime,System.String)
    name: GetHistoricalWaterQualityAsync
    href: EnviroMonitorApp.Services.IEnvironmentalDataService.html#EnviroMonitorApp_Services_IEnvironmentalDataService_GetHistoricalWaterQualityAsync_System_DateTime_System_DateTime_System_String_
  - name: (
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
