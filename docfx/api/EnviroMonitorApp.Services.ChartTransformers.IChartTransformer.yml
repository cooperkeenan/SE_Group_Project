### YamlMime:ManagedReference
items:
- uid: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer
  commentId: T:EnviroMonitorApp.Services.ChartTransformers.IChartTransformer
  id: IChartTransformer
  parent: EnviroMonitorApp.Services.ChartTransformers
  children:
  - EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.Transform(System.Collections.Generic.IEnumerable{System.ValueTuple{System.DateTime,System.Double}},System.DateTime,System.DateTime)
  langs:
  - csharp
  - vb
  name: IChartTransformer
  nameWithType: IChartTransformer
  fullName: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer
  type: Interface
  source:
    remote:
      path: EnviroMonitorApp.Core/ChartTransformers/IChartTransformer.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: IChartTransformer
    path: ../EnviroMonitorApp.Core/ChartTransformers/IChartTransformer.cs
    startLine: 10
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services.ChartTransformers
  summary: >-
    Transforms a series of timestamped values into a list of ChartEntry

    (handles binning, scaling, labels, etc).
  example: []
  syntax:
    content: public interface IChartTransformer
    content.vb: Public Interface IChartTransformer
- uid: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.Transform(System.Collections.Generic.IEnumerable{System.ValueTuple{System.DateTime,System.Double}},System.DateTime,System.DateTime)
  commentId: M:EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.Transform(System.Collections.Generic.IEnumerable{System.ValueTuple{System.DateTime,System.Double}},System.DateTime,System.DateTime)
  id: Transform(System.Collections.Generic.IEnumerable{System.ValueTuple{System.DateTime,System.Double}},System.DateTime,System.DateTime)
  parent: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer
  langs:
  - csharp
  - vb
  name: Transform(IEnumerable<(DateTime timestamp, double value)>, DateTime, DateTime)
  nameWithType: IChartTransformer.Transform(IEnumerable<(DateTime timestamp, double value)>, DateTime, DateTime)
  fullName: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.Transform(System.Collections.Generic.IEnumerable<(System.DateTime timestamp, double value)>, System.DateTime, System.DateTime)
  type: Method
  source:
    remote:
      path: EnviroMonitorApp.Core/ChartTransformers/IChartTransformer.cs
      branch: UnitTests/HistoricalData
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: Transform
    path: ../EnviroMonitorApp.Core/ChartTransformers/IChartTransformer.cs
    startLine: 19
  assemblies:
  - EnviroMonitorApp.Core
  namespace: EnviroMonitorApp.Services.ChartTransformers
  summary: Transforms raw timestamped data into chart entries suitable for visualization.
  example: []
  syntax:
    content: IList<ChartEntry> Transform(IEnumerable<(DateTime timestamp, double value)> raw, DateTime start, DateTime end)
    parameters:
    - id: raw
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.DateTime,System.Double}}
      description: A sequence of (timestamp, value) pairs.
    - id: start
      type: System.DateTime
      description: Chart start date.
    - id: end
      type: System.DateTime
      description: Chart end date.
    return:
      type: System.Collections.Generic.IList{Microcharts.ChartEntry}
      description: Ready-to-plot ChartEntry list.
    content.vb: Function Transform(raw As IEnumerable(Of (timestamp As Date, value As Double)), start As Date, [end] As Date) As IList(Of ChartEntry)
  overload: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.Transform*
  nameWithType.vb: IChartTransformer.Transform(IEnumerable(Of (timestamp As Date, value As Double)), Date, Date)
  fullName.vb: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.Transform(System.Collections.Generic.IEnumerable(Of (timestamp As Date, value As Double)), Date, Date)
  name.vb: Transform(IEnumerable(Of (timestamp As Date, value As Double)), Date, Date)
references:
- uid: EnviroMonitorApp.Services.ChartTransformers
  commentId: N:EnviroMonitorApp.Services.ChartTransformers
  href: EnviroMonitorApp.html
  name: EnviroMonitorApp.Services.ChartTransformers
  nameWithType: EnviroMonitorApp.Services.ChartTransformers
  fullName: EnviroMonitorApp.Services.ChartTransformers
  spec.csharp:
  - uid: EnviroMonitorApp
    name: EnviroMonitorApp
    href: EnviroMonitorApp.html
  - name: .
  - uid: EnviroMonitorApp.Services
    name: Services
    href: EnviroMonitorApp.Services.html
  - name: .
  - uid: EnviroMonitorApp.Services.ChartTransformers
    name: ChartTransformers
    href: EnviroMonitorApp.Services.ChartTransformers.html
  spec.vb:
  - uid: EnviroMonitorApp
    name: EnviroMonitorApp
    href: EnviroMonitorApp.html
  - name: .
  - uid: EnviroMonitorApp.Services
    name: Services
    href: EnviroMonitorApp.Services.html
  - name: .
  - uid: EnviroMonitorApp.Services.ChartTransformers
    name: ChartTransformers
    href: EnviroMonitorApp.Services.ChartTransformers.html
- uid: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.Transform*
  commentId: Overload:EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.Transform
  href: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.html#EnviroMonitorApp_Services_ChartTransformers_IChartTransformer_Transform_System_Collections_Generic_IEnumerable_System_ValueTuple_System_DateTime_System_Double___System_DateTime_System_DateTime_
  name: Transform
  nameWithType: IChartTransformer.Transform
  fullName: EnviroMonitorApp.Services.ChartTransformers.IChartTransformer.Transform
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.DateTime,System.Double}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.DateTime,System.Double}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(DateTime timestamp, double value)>
  nameWithType: IEnumerable<(DateTime timestamp, double value)>
  fullName: System.Collections.Generic.IEnumerable<(System.DateTime timestamp, double value)>
  nameWithType.vb: IEnumerable(Of (timestamp As Date, value As Double))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (timestamp As Date, value As Double))
  name.vb: IEnumerable(Of (timestamp As Date, value As Double))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: " "
  - uid: System.ValueTuple{System.DateTime,System.Double}.timestamp
    name: timestamp
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.datetime,system.double-.timestamp
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: " "
  - uid: System.ValueTuple{System.DateTime,System.Double}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.datetime,system.double-.value
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.DateTime,System.Double}.timestamp
    name: timestamp
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.datetime,system.double-.timestamp
  - name: " "
  - name: As
  - name: " "
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.DateTime,System.Double}.value
    name: value
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.datetime,system.double-.value
  - name: " "
  - name: As
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  - name: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Collections.Generic.IList{Microcharts.ChartEntry}
  commentId: T:System.Collections.Generic.IList{Microcharts.ChartEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<ChartEntry>
  nameWithType: IList<ChartEntry>
  fullName: System.Collections.Generic.IList<Microcharts.ChartEntry>
  nameWithType.vb: IList(Of ChartEntry)
  fullName.vb: System.Collections.Generic.IList(Of Microcharts.ChartEntry)
  name.vb: IList(Of ChartEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - uid: Microcharts.ChartEntry
    name: ChartEntry
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microcharts.ChartEntry
    name: ChartEntry
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
