### YamlMime:ManagedReference
items:
- uid: EnviroMonitor.Core.Services.BackupService
  commentId: T:EnviroMonitor.Core.Services.BackupService
  id: BackupService
  parent: EnviroMonitor.Core.Services
  children:
  - EnviroMonitor.Core.Services.BackupService.#ctor(System.String,System.String,System.String)
  - EnviroMonitor.Core.Services.BackupService.CreateManualBackupAsync
  - EnviroMonitor.Core.Services.BackupService.GetBackupHistoryAsync
  langs:
  - csharp
  - vb
  name: BackupService
  nameWithType: BackupService
  fullName: EnviroMonitor.Core.Services.BackupService
  type: Class
  source:
    remote:
      path: EnviroMonitor.Core/Services/BackupService.cs
      branch: features/backup
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: BackupService
    path: ../EnviroMonitor.Core/Services/BackupService.cs
    startLine: 12
  assemblies:
  - EnviroMonitor.Core
  namespace: EnviroMonitor.Core.Services
  summary: Handles creating and tracking backups of the four Excel data files.
  example: []
  syntax:
    content: 'public class BackupService : IBackupService'
    content.vb: Public Class BackupService Implements IBackupService
  inheritance:
  - System.Object
  implements:
  - EnviroMonitor.Core.Services.IBackupService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: EnviroMonitor.Core.Services.BackupService.#ctor(System.String,System.String,System.String)
  commentId: M:EnviroMonitor.Core.Services.BackupService.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: EnviroMonitor.Core.Services.BackupService
  langs:
  - csharp
  - vb
  name: BackupService(string, string, string)
  nameWithType: BackupService.BackupService(string, string, string)
  fullName: EnviroMonitor.Core.Services.BackupService.BackupService(string, string, string)
  type: Constructor
  source:
    remote:
      path: EnviroMonitor.Core/Services/BackupService.cs
      branch: features/backup
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: .ctor
    path: ../EnviroMonitor.Core/Services/BackupService.cs
    startLine: 37
  assemblies:
  - EnviroMonitor.Core
  namespace: EnviroMonitor.Core.Services
  summary: Creates a new <xref href="EnviroMonitor.Core.Services.BackupService" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public BackupService(string dbPath, string sourceFolder, string backupFolder)
    parameters:
    - id: dbPath
      type: System.String
      description: Full path to the SQLite database file (<code>enviro.db3</code>).
    - id: sourceFolder
      type: System.String
      description: Folder that currently contains the four live Excel files.
    - id: backupFolder
      type: System.String
      description: Destination folder where the copies will be placed.
    content.vb: Public Sub New(dbPath As String, sourceFolder As String, backupFolder As String)
  overload: EnviroMonitor.Core.Services.BackupService.#ctor*
  nameWithType.vb: BackupService.New(String, String, String)
  fullName.vb: EnviroMonitor.Core.Services.BackupService.New(String, String, String)
  name.vb: New(String, String, String)
- uid: EnviroMonitor.Core.Services.BackupService.CreateManualBackupAsync
  commentId: M:EnviroMonitor.Core.Services.BackupService.CreateManualBackupAsync
  id: CreateManualBackupAsync
  parent: EnviroMonitor.Core.Services.BackupService
  langs:
  - csharp
  - vb
  name: CreateManualBackupAsync()
  nameWithType: BackupService.CreateManualBackupAsync()
  fullName: EnviroMonitor.Core.Services.BackupService.CreateManualBackupAsync()
  type: Method
  source:
    remote:
      path: EnviroMonitor.Core/Services/BackupService.cs
      branch: features/backup
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: CreateManualBackupAsync
    path: ../EnviroMonitor.Core/Services/BackupService.cs
    startLine: 55
  assemblies:
  - EnviroMonitor.Core
  namespace: EnviroMonitor.Core.Services
  summary: >-
    Copies the four Excel files to <xref href="EnviroMonitor.Core.Services.BackupService._backupFolder" data-throw-if-not-resolved="false"></xref>

    and records the outcome in the database.
  example: []
  syntax:
    content: public Task<Backup> CreateManualBackupAsync()
    return:
      type: System.Threading.Tasks.Task{EnviroMonitor.Core.Models.Backup}
      description: A <xref href="EnviroMonitor.Core.Models.Backup" data-throw-if-not-resolved="false"></xref> record reflecting success or failure.
    content.vb: Public Function CreateManualBackupAsync() As Task(Of Backup)
  overload: EnviroMonitor.Core.Services.BackupService.CreateManualBackupAsync*
  implements:
  - EnviroMonitor.Core.Services.IBackupService.CreateManualBackupAsync
- uid: EnviroMonitor.Core.Services.BackupService.GetBackupHistoryAsync
  commentId: M:EnviroMonitor.Core.Services.BackupService.GetBackupHistoryAsync
  id: GetBackupHistoryAsync
  parent: EnviroMonitor.Core.Services.BackupService
  langs:
  - csharp
  - vb
  name: GetBackupHistoryAsync()
  nameWithType: BackupService.GetBackupHistoryAsync()
  fullName: EnviroMonitor.Core.Services.BackupService.GetBackupHistoryAsync()
  type: Method
  source:
    remote:
      path: EnviroMonitor.Core/Services/BackupService.cs
      branch: features/backup
      repo: https://github.com/cooperkeenan/SE_Group_Project.git
    id: GetBackupHistoryAsync
    path: ../EnviroMonitor.Core/Services/BackupService.cs
    startLine: 108
  assemblies:
  - EnviroMonitor.Core
  namespace: EnviroMonitor.Core.Services
  summary: Returns the backup history, newest first.
  example: []
  syntax:
    content: public Task<IReadOnlyList<Backup>> GetBackupHistoryAsync()
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{EnviroMonitor.Core.Models.Backup}}
    content.vb: Public Function GetBackupHistoryAsync() As Task(Of IReadOnlyList(Of Backup))
  overload: EnviroMonitor.Core.Services.BackupService.GetBackupHistoryAsync*
  implements:
  - EnviroMonitor.Core.Services.IBackupService.GetBackupHistoryAsync
references:
- uid: EnviroMonitor.Core.Services
  commentId: N:EnviroMonitor.Core.Services
  href: EnviroMonitor.html
  name: EnviroMonitor.Core.Services
  nameWithType: EnviroMonitor.Core.Services
  fullName: EnviroMonitor.Core.Services
  spec.csharp:
  - uid: EnviroMonitor
    name: EnviroMonitor
    href: EnviroMonitor.html
  - name: .
  - uid: EnviroMonitor.Core
    name: Core
    href: EnviroMonitor.Core.html
  - name: .
  - uid: EnviroMonitor.Core.Services
    name: Services
    href: EnviroMonitor.Core.Services.html
  spec.vb:
  - uid: EnviroMonitor
    name: EnviroMonitor
    href: EnviroMonitor.html
  - name: .
  - uid: EnviroMonitor.Core
    name: Core
    href: EnviroMonitor.Core.html
  - name: .
  - uid: EnviroMonitor.Core.Services
    name: Services
    href: EnviroMonitor.Core.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: EnviroMonitor.Core.Services.IBackupService
  commentId: T:EnviroMonitor.Core.Services.IBackupService
  parent: EnviroMonitor.Core.Services
  href: EnviroMonitor.Core.Services.IBackupService.html
  name: IBackupService
  nameWithType: IBackupService
  fullName: EnviroMonitor.Core.Services.IBackupService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnviroMonitor.Core.Services.BackupService
  commentId: T:EnviroMonitor.Core.Services.BackupService
  href: EnviroMonitor.Core.Services.BackupService.html
  name: BackupService
  nameWithType: BackupService
  fullName: EnviroMonitor.Core.Services.BackupService
- uid: EnviroMonitor.Core.Services.BackupService.#ctor*
  commentId: Overload:EnviroMonitor.Core.Services.BackupService.#ctor
  href: EnviroMonitor.Core.Services.BackupService.html#EnviroMonitor_Core_Services_BackupService__ctor_System_String_System_String_System_String_
  name: BackupService
  nameWithType: BackupService.BackupService
  fullName: EnviroMonitor.Core.Services.BackupService.BackupService
  nameWithType.vb: BackupService.New
  fullName.vb: EnviroMonitor.Core.Services.BackupService.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: EnviroMonitor.Core.Services.BackupService._backupFolder
  commentId: F:EnviroMonitor.Core.Services.BackupService._backupFolder
  name: _backupFolder
  nameWithType: BackupService._backupFolder
  fullName: EnviroMonitor.Core.Services.BackupService._backupFolder
- uid: EnviroMonitor.Core.Models.Backup
  commentId: T:EnviroMonitor.Core.Models.Backup
  href: EnviroMonitor.Core.Models.Backup.html
  name: Backup
  nameWithType: Backup
  fullName: EnviroMonitor.Core.Models.Backup
- uid: EnviroMonitor.Core.Services.BackupService.CreateManualBackupAsync*
  commentId: Overload:EnviroMonitor.Core.Services.BackupService.CreateManualBackupAsync
  href: EnviroMonitor.Core.Services.BackupService.html#EnviroMonitor_Core_Services_BackupService_CreateManualBackupAsync
  name: CreateManualBackupAsync
  nameWithType: BackupService.CreateManualBackupAsync
  fullName: EnviroMonitor.Core.Services.BackupService.CreateManualBackupAsync
- uid: EnviroMonitor.Core.Services.IBackupService.CreateManualBackupAsync
  commentId: M:EnviroMonitor.Core.Services.IBackupService.CreateManualBackupAsync
  parent: EnviroMonitor.Core.Services.IBackupService
  href: EnviroMonitor.Core.Services.IBackupService.html#EnviroMonitor_Core_Services_IBackupService_CreateManualBackupAsync
  name: CreateManualBackupAsync()
  nameWithType: IBackupService.CreateManualBackupAsync()
  fullName: EnviroMonitor.Core.Services.IBackupService.CreateManualBackupAsync()
  spec.csharp:
  - uid: EnviroMonitor.Core.Services.IBackupService.CreateManualBackupAsync
    name: CreateManualBackupAsync
    href: EnviroMonitor.Core.Services.IBackupService.html#EnviroMonitor_Core_Services_IBackupService_CreateManualBackupAsync
  - name: (
  - name: )
  spec.vb:
  - uid: EnviroMonitor.Core.Services.IBackupService.CreateManualBackupAsync
    name: CreateManualBackupAsync
    href: EnviroMonitor.Core.Services.IBackupService.html#EnviroMonitor_Core_Services_IBackupService_CreateManualBackupAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{EnviroMonitor.Core.Models.Backup}
  commentId: T:System.Threading.Tasks.Task{EnviroMonitor.Core.Models.Backup}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Backup>
  nameWithType: Task<Backup>
  fullName: System.Threading.Tasks.Task<EnviroMonitor.Core.Models.Backup>
  nameWithType.vb: Task(Of Backup)
  fullName.vb: System.Threading.Tasks.Task(Of EnviroMonitor.Core.Models.Backup)
  name.vb: Task(Of Backup)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: EnviroMonitor.Core.Models.Backup
    name: Backup
    href: EnviroMonitor.Core.Models.Backup.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: EnviroMonitor.Core.Models.Backup
    name: Backup
    href: EnviroMonitor.Core.Models.Backup.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: EnviroMonitor.Core.Services.BackupService.GetBackupHistoryAsync*
  commentId: Overload:EnviroMonitor.Core.Services.BackupService.GetBackupHistoryAsync
  href: EnviroMonitor.Core.Services.BackupService.html#EnviroMonitor_Core_Services_BackupService_GetBackupHistoryAsync
  name: GetBackupHistoryAsync
  nameWithType: BackupService.GetBackupHistoryAsync
  fullName: EnviroMonitor.Core.Services.BackupService.GetBackupHistoryAsync
- uid: EnviroMonitor.Core.Services.IBackupService.GetBackupHistoryAsync
  commentId: M:EnviroMonitor.Core.Services.IBackupService.GetBackupHistoryAsync
  parent: EnviroMonitor.Core.Services.IBackupService
  href: EnviroMonitor.Core.Services.IBackupService.html#EnviroMonitor_Core_Services_IBackupService_GetBackupHistoryAsync
  name: GetBackupHistoryAsync()
  nameWithType: IBackupService.GetBackupHistoryAsync()
  fullName: EnviroMonitor.Core.Services.IBackupService.GetBackupHistoryAsync()
  spec.csharp:
  - uid: EnviroMonitor.Core.Services.IBackupService.GetBackupHistoryAsync
    name: GetBackupHistoryAsync
    href: EnviroMonitor.Core.Services.IBackupService.html#EnviroMonitor_Core_Services_IBackupService_GetBackupHistoryAsync
  - name: (
  - name: )
  spec.vb:
  - uid: EnviroMonitor.Core.Services.IBackupService.GetBackupHistoryAsync
    name: GetBackupHistoryAsync
    href: EnviroMonitor.Core.Services.IBackupService.html#EnviroMonitor_Core_Services_IBackupService_GetBackupHistoryAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{EnviroMonitor.Core.Models.Backup}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{EnviroMonitor.Core.Models.Backup}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IReadOnlyList<Backup>>
  nameWithType: Task<IReadOnlyList<Backup>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<EnviroMonitor.Core.Models.Backup>>
  nameWithType.vb: Task(Of IReadOnlyList(Of Backup))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IReadOnlyList(Of EnviroMonitor.Core.Models.Backup))
  name.vb: Task(Of IReadOnlyList(Of Backup))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: EnviroMonitor.Core.Models.Backup
    name: Backup
    href: EnviroMonitor.Core.Models.Backup.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: EnviroMonitor.Core.Models.Backup
    name: Backup
    href: EnviroMonitor.Core.Models.Backup.html
  - name: )
  - name: )
